(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{187:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return p}));var r=t(1),a=t(9),c=(t(0),t(216)),o={last_modified_on:"2020-03-14",id:"presenting-gnet-cn",title:"Gnet \u5bfc\u89c6",description:"\u6700\u5feb\u7684 Go \u7f51\u7edc\u6846\u67b6 gnet \u6765\u5566\uff01",author_github:"https://github.com/panjf2000",tags:["type: \u5b98\u5ba3","domain: \u5c55\u793a"]},i={permalink:"/blog/presenting-gnet-cn",source:"@site/blog/2020-03-14-presenting-gnet-cn.md",description:"\u6700\u5feb\u7684 Go \u7f51\u7edc\u6846\u67b6 gnet \u6765\u5566\uff01",date:"2020-03-14T00:00:00.000Z",tags:[{label:"type: \u5b98\u5ba3",permalink:"/blog/tags/type-\u5b98\u5ba3"},{label:"domain: \u5c55\u793a",permalink:"/blog/tags/domain-\u5c55\u793a"}],title:"Gnet \u5bfc\u89c6",readingTime:15.78,truncated:!1,nextItem:{title:"Presenting Gnet",permalink:"/blog/presenting-gnet"}},b=[{value:"\u591a\u7ebf\u7a0b/Go\u7a0b\u7f51\u7edc\u6a21\u578b",id:"\u591a\u7ebf\u7a0bgo\u7a0b\u7f51\u7edc\u6a21\u578b",children:[{value:"\u4e3b\u4ece\u591a Reactors",id:"\u4e3b\u4ece\u591a-reactors",children:[]},{value:"\u4e3b\u4ece\u591a Reactors + \u7ebf\u7a0b/Go\u7a0b\u6c60",id:"\u4e3b\u4ece\u591a-reactors--\u7ebf\u7a0bgo\u7a0b\u6c60",children:[]}]},{value:"\u53ef\u91cd\u7528\u4e14\u81ea\u52a8\u6269\u5bb9\u7684 Ring-Buffer",id:"\u53ef\u91cd\u7528\u4e14\u81ea\u52a8\u6269\u5bb9\u7684-ring-buffer",children:[]},{value:"\u524d\u63d0",id:"\u524d\u63d0",children:[]},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",children:[]},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",children:[{value:"\u4e0d\u5e26\u963b\u585e\u903b\u8f91\u7684 echo \u670d\u52a1\u5668",id:"\u4e0d\u5e26\u963b\u585e\u903b\u8f91\u7684-echo-\u670d\u52a1\u5668",children:[]},{value:"\u5e26\u963b\u585e\u903b\u8f91\u7684 echo \u670d\u52a1\u5668",id:"\u5e26\u963b\u585e\u903b\u8f91\u7684-echo-\u670d\u52a1\u5668",children:[]}]},{value:"I/O \u4e8b\u4ef6",id:"io-\u4e8b\u4ef6",children:[]},{value:"\u5b9a\u65f6\u5668",id:"\u5b9a\u65f6\u5668",children:[]},{value:"UDP \u652f\u6301",id:"udp-\u652f\u6301",children:[]},{value:"Unix Domain Socket \u652f\u6301",id:"unix-domain-socket-\u652f\u6301",children:[]},{value:"\u4f7f\u7528\u591a\u6838",id:"\u4f7f\u7528\u591a\u6838",children:[]},{value:"\u8d1f\u8f7d\u5747\u8861",id:"\u8d1f\u8f7d\u5747\u8861",children:[]},{value:"SO_REUSEPORT \u7aef\u53e3\u590d\u7528",id:"so_reuseport-\u7aef\u53e3\u590d\u7528",children:[]},{value:"\u591a\u79cd\u5185\u7f6e\u7684 TCP \u6d41\u7f16\u89e3\u7801\u5668",id:"\u591a\u79cd\u5185\u7f6e\u7684-tcp-\u6d41\u7f16\u89e3\u7801\u5668",children:[]},{value:"TechEmpower \u6027\u80fd\u6d4b\u8bd5",id:"techempower-\u6027\u80fd\u6d4b\u8bd5",children:[]},{value:"\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u5e93\u6027\u80fd\u5bf9\u6bd4",id:"\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u5e93\u6027\u80fd\u5bf9\u6bd4",children:[]},{value:"Linux (epoll)",id:"linux-epoll",children:[{value:"\u7cfb\u7edf\u53c2\u6570",id:"\u7cfb\u7edf\u53c2\u6570",children:[]}]},{value:"FreeBSD (kqueue)",id:"freebsd-kqueue",children:[{value:"\u7cfb\u7edf\u53c2\u6570",id:"\u7cfb\u7edf\u53c2\u6570-1",children:[]}]}],l={rightToc:b};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",{align:"center"},Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/logos/master/gnet/logo.png",alt:"gnet"})),Object(c.b)("h1",{id:"-\u7b80\u4ecb"},"\ud83d\udcd6 \u7b80\u4ecb"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u662f\u4e00\u4e2a\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u9ad8\u6027\u80fd\u548c\u8f7b\u91cf\u7ea7\u7f51\u7edc\u6846\u67b6\u3002\u5b83\u76f4\u63a5\u4f7f\u7528 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Epoll"}),"epoll")," \u548c ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Kqueue"}),"kqueue")," \u7cfb\u7edf\u8c03\u7528\u800c\u975e\u6807\u51c6 Go \u7f51\u7edc\u5305\uff1a",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://golang.org/pkg/net/"}),"net")," \u6765\u6784\u5efa\u7f51\u7edc\u5e94\u7528\uff0c\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u7c7b\u4f3c\u4e24\u4e2a\u5f00\u6e90\u7684\u7f51\u7edc\u5e93\uff1a",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/netty/netty"}),"netty")," \u548c ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/libuv/libuv"}),"libuv"),"\uff0c\u8fd9\u4e5f\u4f7f\u5f97 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u8fbe\u5230\u4e86\u4e00\u4e2a\u8fdc\u8d85 Go ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://golang.org/pkg/net/"}),"net")," \u7684\u6027\u80fd\u8868\u73b0\u3002"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u8bbe\u8ba1\u5f00\u53d1\u7684\u521d\u8877\u4e0d\u662f\u4e3a\u4e86\u53d6\u4ee3 Go \u7684\u6807\u51c6\u7f51\u7edc\u5e93\uff1a",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://golang.org/pkg/net/"}),"net"),"\uff0c\u800c\u662f\u4e3a\u4e86\u521b\u9020\u51fa\u4e00\u4e2a\u7c7b\u4f3c\u4e8e ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"http://redis.io"}),"Redis"),"\u3001",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.haproxy.org"}),"Haproxy")," \u80fd\u9ad8\u6548\u5904\u7406\u7f51\u7edc\u5305\u7684 Go \u8bed\u8a00\u7f51\u7edc\u670d\u52a1\u5668\u6846\u67b6\u3002"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684\u5356\u70b9\u5728\u4e8e\u5b83\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u8f7b\u91cf\u7ea7\u3001\u975e\u963b\u585e\u7684\u7eaf Go \u5b9e\u73b0\u7684\u4f20\u8f93\u5c42\uff08TCP/UDP/Unix Domain Socket\uff09\u7f51\u7edc\u6846\u67b6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u5e94\u7528\u5c42\u7f51\u7edc\u534f\u8bae(HTTP\u3001RPC\u3001Redis\u3001WebSocket \u7b49\u7b49)\uff0c\u4ece\u800c\u6784\u5efa\u51fa\u81ea\u5df1\u7684\u5e94\u7528\u5c42\u7f51\u7edc\u5e94\u7528\uff1a\u6bd4\u5982\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u4e0a\u5b9e\u73b0 HTTP \u534f\u8bae\u5c31\u53ef\u4ee5\u521b\u5efa\u51fa\u4e00\u4e2a HTTP \u670d\u52a1\u5668 \u6216\u8005 Web \u5f00\u53d1\u6846\u67b6\uff0c\u5b9e\u73b0 Redis \u534f\u8bae\u5c31\u53ef\u4ee5\u521b\u5efa\u51fa\u81ea\u5df1\u7684 Redis \u670d\u52a1\u5668\u7b49\u7b49\u3002"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"gnet")," \u884d\u751f\u81ea\u53e6\u4e00\u4e2a\u9879\u76ee\uff1a",Object(c.b)("inlineCode",{parentName:"strong"},"evio"),"\uff0c\u4f46\u62e5\u6709\u66f4\u4e30\u5bcc\u7684\u529f\u80fd\u7279\u6027\uff0c\u4e14\u6027\u80fd\u8fdc\u80dc\u4e4b\u3002")),Object(c.b)("h1",{id:"-\u529f\u80fd"},"\ud83d\ude80 \u529f\u80fd"),Object(c.b)("ul",{className:"contains-task-list"},Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"#-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95"}),"\u9ad8\u6027\u80fd")," \u7684\u57fa\u4e8e\u591a\u7ebf\u7a0b/Go\u7a0b\u7f51\u7edc\u6a21\u578b\u7684 event-loop \u4e8b\u4ef6\u9a71\u52a8"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u5185\u7f6e goroutine \u6c60\uff0c\u7531\u5f00\u6e90\u5e93 ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/panjf2000/ants"}),"ants")," \u63d0\u4f9b\u652f\u6301"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u5185\u7f6e bytes \u5185\u5b58\u6c60\uff0c\u7531\u5f00\u6e90\u5e93 ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/valyala/bytebufferpool"}),"bytebufferpool")," \u63d0\u4f9b\u652f\u6301"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u6574\u4e2a\u751f\u547d\u5468\u671f\u662f\u65e0\u9501\u7684"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u7b80\u5355\u6613\u7528\u7684 APIs"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u57fa\u4e8e Ring-Buffer \u7684\u9ad8\u6548\u4e14\u53ef\u91cd\u7528\u7684\u5185\u5b58 buffer"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u652f\u6301\u591a\u79cd\u7f51\u7edc\u534f\u8bae/IPC \u673a\u5236\uff1a",Object(c.b)("inlineCode",{parentName:"li"},"TCP"),"\u3001",Object(c.b)("inlineCode",{parentName:"li"},"UDP")," \u548c ",Object(c.b)("inlineCode",{parentName:"li"},"Unix Domain Socket")),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u652f\u6301\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff1a",Object(c.b)("inlineCode",{parentName:"li"},"Round-Robin(\u8f6e\u8be2)"),"\u3001",Object(c.b)("inlineCode",{parentName:"li"},"Source-Addr-Hash(\u6e90\u5730\u5740\u54c8\u5e0c)")," \u548c ",Object(c.b)("inlineCode",{parentName:"li"},"Least-Connections(\u6700\u5c11\u8fde\u63a5\u6570)")),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u652f\u6301\u4e24\u79cd\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236\uff1a",Object(c.b)("strong",{parentName:"li"},"Linux")," \u91cc\u7684 ",Object(c.b)("inlineCode",{parentName:"li"},"epoll")," \u4ee5\u53ca ",Object(c.b)("strong",{parentName:"li"},"FreeBSD/DragonFly/Darwin")," \u91cc\u7684 ",Object(c.b)("inlineCode",{parentName:"li"},"kqueue")),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u652f\u6301\u5f02\u6b65\u5199\u64cd\u4f5c"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u7075\u6d3b\u7684\u4e8b\u4ef6\u5b9a\u65f6\u5668"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","SO_REUSEPORT \u7aef\u53e3\u91cd\u7528"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u5185\u7f6e\u591a\u79cd\u7f16\u89e3\u7801\u5668\uff0c\u652f\u6301\u5bf9 TCP \u6570\u636e\u6d41\u5206\u5305\uff1aLineBasedFrameCodec, DelimiterBasedFrameCodec, FixedLengthFrameCodec \u548c LengthFieldBasedFrameCodec\uff0c\u53c2\u8003\u81ea ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://netty.io/4.1/api/io/netty/handler/codec/package-summary.html"}),"netty codec"),"\uff0c\u800c\u4e14\u652f\u6301\u81ea\u5b9a\u5236\u7f16\u89e3\u7801\u5668"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","\u652f\u6301 Windows \u5e73\u53f0\uff0c\u57fa\u4e8e ",Object(c.b)("del",{parentName:"li"},"IOCP \u4e8b\u4ef6\u9a71\u52a8\u673a\u5236")," Go \u6807\u51c6\u7f51\u7edc\u5e93"),Object(c.b)("li",Object(r.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(r.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","\u5b9e\u73b0 ",Object(c.b)("inlineCode",{parentName:"li"},"gnet")," \u5ba2\u6237\u7aef")),Object(c.b)("h1",{id:"-\u6838\u5fc3\u8bbe\u8ba1"},"\ud83d\udca1 \u6838\u5fc3\u8bbe\u8ba1"),Object(c.b)("h2",{id:"\u591a\u7ebf\u7a0bgo\u7a0b\u7f51\u7edc\u6a21\u578b"},"\u591a\u7ebf\u7a0b/Go\u7a0b\u7f51\u7edc\u6a21\u578b"),Object(c.b)("h3",{id:"\u4e3b\u4ece\u591a-reactors"},"\u4e3b\u4ece\u591a Reactors"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u91cd\u65b0\u8bbe\u8ba1\u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u5185\u7f6e\u7684\u591a\u7ebf\u7a0b/Go\u7a0b\u7f51\u7edc\u6a21\u578b\uff1a\u300e\u4e3b\u4ece\u591a Reactors\u300f\uff0c\u8fd9\u4e5f\u662f ",Object(c.b)("inlineCode",{parentName:"p"},"netty")," \u9ed8\u8ba4\u7684\u591a\u7ebf\u7a0b\u7f51\u7edc\u6a21\u578b\uff0c\u4e0b\u9762\u662f\u8fd9\u4e2a\u6a21\u578b\u7684\u539f\u7406\u56fe\uff1a"),Object(c.b)("p",{align:"center"},Object(c.b)("img",{alt:"multi_reactor",src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/multi-reactors.png"})),Object(c.b)("p",null,"\u5b83\u7684\u8fd0\u884c\u6d41\u7a0b\u5982\u4e0b\u9762\u7684\u65f6\u5e8f\u56fe\uff1a"),Object(c.b)("p",{align:"center"},Object(c.b)("img",{alt:"reactor",src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/multi-reactors-sequence-diagram.png"})),Object(c.b)("h3",{id:"\u4e3b\u4ece\u591a-reactors--\u7ebf\u7a0bgo\u7a0b\u6c60"},"\u4e3b\u4ece\u591a Reactors + \u7ebf\u7a0b/Go\u7a0b\u6c60"),Object(c.b)("p",null,"\u4f60\u53ef\u80fd\u4f1a\u95ee\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6211\u7684\u4e1a\u52a1\u903b\u8f91\u662f\u963b\u585e\u7684\uff0c\u90a3\u4e48\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React")," \u6ce8\u518c\u65b9\u6cd5\u91cc\u7684\u903b\u8f91\u4e5f\u4f1a\u963b\u585e\uff0c\u4ece\u800c\u5bfc\u81f4\u963b\u585e event-loop \u7ebf\u7a0b\uff0c\u8fd9\u65f6\u5019\u600e\u4e48\u529e\uff1f"),Object(c.b)("p",null,"\u6b63\u5982\u4f60\u6240\u77e5\uff0c\u57fa\u4e8e ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7f16\u5199\u4f60\u7684\u7f51\u7edc\u670d\u52a1\u5668\u6709\u4e00\u6761\u6700\u91cd\u8981\u7684\u539f\u5219\uff1a\u6c38\u8fdc\u4e0d\u80fd\u8ba9\u4f60\u4e1a\u52a1\u903b\u8f91\uff08\u4e00\u822c\u5199\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React")," \u91cc\uff09\u963b\u585e event-loop \u7ebf\u7a0b\uff0c\u8fd9\u4e5f\u662f ",Object(c.b)("inlineCode",{parentName:"p"},"netty")," \u7684\u4e00\u6761\u6700\u91cd\u8981\u7684\u539f\u5219\uff0c\u5426\u5219\u7684\u8bdd\u5c06\u4f1a\u6781\u5927\u5730\u964d\u4f4e\u670d\u52a1\u5668\u7684\u541e\u5410\u91cf\u3002"),Object(c.b)("p",null,"\u6211\u7684\u56de\u7b54\u662f\uff0c\u57fa\u4e8e",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684\u53e6\u4e00\u79cd\u591a\u7ebf\u7a0b/Go\u7a0b\u7f51\u7edc\u6a21\u578b\uff1a\u300e\u5e26\u7ebf\u7a0b/Go\u7a0b\u6c60\u7684\u4e3b\u4ece\u591a Reactors\u300f\u53ef\u4ee5\u89e3\u51b3\u963b\u585e\u95ee\u9898\uff0c\u8fd9\u4e2a\u65b0\u7f51\u7edc\u6a21\u578b\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a worker pool \u6765\u89e3\u51b3\u4e1a\u52a1\u903b\u8f91\u963b\u585e\u7684\u95ee\u9898\uff1a\u5b83\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u521d\u59cb\u5316\u4e00\u4e2a worker pool\uff0c\u7136\u540e\u5728\u628a ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React"),"\u91cc\u9762\u7684\u963b\u585e\u4ee3\u7801\u653e\u5230 worker pool \u91cc\u6267\u884c\uff0c\u4ece\u800c\u907f\u514d\u963b\u585e event-loop \u7ebf\u7a0b\u3002"),Object(c.b)("p",null,"\u6a21\u578b\u7684\u67b6\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a"),Object(c.b)("p",{align:"center"},Object(c.b)("img",{alt:"multi_reactor_thread_pool",src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/multi-reactors%2Bthread-pool.png"})),Object(c.b)("p",null,"\u5b83\u7684\u8fd0\u884c\u6d41\u7a0b\u5982\u4e0b\u9762\u7684\u65f6\u5e8f\u56fe\uff1a"),Object(c.b)("p",{align:"center"},Object(c.b)("img",{alt:"multi-reactors",src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/multi-reactors%2Bthread-pool-sequence-diagram.png"})),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u901a\u8fc7\u5229\u7528 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/panjf2000/ants"}),"ants")," goroutine \u6c60\uff08\u4e00\u4e2a\u57fa\u4e8e Go \u5f00\u53d1\u7684\u9ad8\u6027\u80fd\u7684 goroutine \u6c60 \uff0c\u5b9e\u73b0\u4e86\u5bf9\u5927\u89c4\u6a21 goroutines \u7684\u8c03\u5ea6\u7ba1\u7406\u3001goroutines \u590d\u7528\uff09\u6765\u5b9e\u73b0\u300e\u4e3b\u4ece\u591a Reactors + \u7ebf\u7a0b/Go\u7a0b\u6c60\u300f\u7f51\u7edc\u6a21\u578b\u3002\u5173\u4e8e ",Object(c.b)("inlineCode",{parentName:"p"},"ants")," \u7684\u5168\u90e8\u529f\u80fd\u548c\u4f7f\u7528\uff0c\u53ef\u4ee5\u5728 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://pkg.go.dev/github.com/panjf2000/ants/v2?tab=doc"}),"ants \u6587\u6863")," \u91cc\u627e\u5230\u3002"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5185\u90e8\u96c6\u6210\u4e86 ",Object(c.b)("inlineCode",{parentName:"p"},"ants")," \u4ee5\u53ca\u63d0\u4f9b\u4e86 ",Object(c.b)("inlineCode",{parentName:"p"},"pool.goroutine.Default()")," \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u4e00\u4e2a ",Object(c.b)("inlineCode",{parentName:"p"},"ants")," goroutine \u6c60\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u628a ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React")," \u4e2d\u963b\u585e\u7684\u4e1a\u52a1\u903b\u8f91\u63d0\u4ea4\u5230 goroutine \u6c60\u91cc\u6267\u884c\uff0c\u6700\u540e\u5728 goroutine \u6c60\u91cc\u7684\u4ee3\u7801\u8c03\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.Conn.AsyncWrite([]byte)")," \u65b9\u6cd5\u628a\u5904\u7406\u5b8c\u963b\u585e\u903b\u8f91\u4e4b\u540e\u5f97\u5230\u7684\u8f93\u51fa\u6570\u636e\u5f02\u6b65\u5199\u56de\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u963b\u585e event-loop \u7ebf\u7a0b\u3002"),Object(c.b)("p",null,"\u6709\u5173\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u91cc\u4f7f\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"ants")," goroutine \u6c60\u7684\u7ec6\u8282\u53ef\u4ee5\u5230",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"#%E5%B8%A6%E9%98%BB%E5%A1%9E%E9%80%BB%E8%BE%91%E7%9A%84-echo-%E6%9C%8D%E5%8A%A1%E5%99%A8"}),"\u8fd9\u91cc"),"\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002"),Object(c.b)("h2",{id:"\u53ef\u91cd\u7528\u4e14\u81ea\u52a8\u6269\u5bb9\u7684-ring-buffer"},"\u53ef\u91cd\u7528\u4e14\u81ea\u52a8\u6269\u5bb9\u7684 Ring-Buffer"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5185\u7f6e\u4e86inbound \u548c outbound \u4e24\u4e2a buffers\uff0c\u57fa\u4e8e Ring-Buffer \u539f\u7406\u5b9e\u73b0\uff0c\u5206\u522b\u7528\u6765\u7f13\u51b2\u8f93\u5165\u8f93\u51fa\u7684\u7f51\u7edc\u6570\u636e\u4ee5\u53ca\u7ba1\u7406\u5185\u5b58\uff0cgnet \u91cc\u9762\u7684 ring buffer \u80fd\u591f\u91cd\u7528\u5185\u5b58\u4ee5\u53ca\u6309\u9700\u6269\u5bb9\u3002"),Object(c.b)("p",null,"\u5bf9\u4e8e TCP \u534f\u8bae\u7684\u6d41\u6570\u636e\uff0c\u4f7f\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u4e0d\u9700\u8981\u4e1a\u52a1\u65b9\u4e3a\u4e86\u89e3\u6790\u5e94\u7528\u5c42\u534f\u8bae\u800c\u81ea\u5df1\u7ef4\u62a4\u548c\u7ba1\u7406 buffers\uff0c",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u4f1a\u66ff\u4e1a\u52a1\u65b9\u5b8c\u6210\u7f13\u51b2\u548c\u7ba1\u7406\u7f51\u7edc\u6570\u636e\u7684\u4efb\u52a1\uff0c\u964d\u4f4e\u4e1a\u52a1\u4ee3\u7801\u7684\u590d\u6742\u6027\u4ee5\u53ca\u964d\u4f4e\u5f00\u53d1\u8005\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u903b\u8f91\u800c\u975e\u4e00\u4e9b\u5e95\u5c42\u5b9e\u73b0\u3002"),Object(c.b)("p",{align:"center"},Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/ring-buffer.gif"})),Object(c.b)("h1",{id:"-\u5f00\u59cb\u4f7f\u7528"},"\ud83c\udf89 \u5f00\u59cb\u4f7f\u7528"),Object(c.b)("h2",{id:"\u524d\u63d0"},"\u524d\u63d0"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u9700\u8981 Go \u7248\u672c >= 1.9\u3002"),Object(c.b)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),"go get -u github.com/panjf2000/gnet\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u652f\u6301\u4f5c\u4e3a\u4e00\u4e2a Go module \u88ab\u5bfc\u5165\uff0c\u57fa\u4e8e ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/golang/go/wiki/Modules"}),"Go 1.11 Modules")," (Go 1.11+)\uff0c\u53ea\u9700\u8981\u5728\u4f60\u7684\u9879\u76ee\u91cc\u76f4\u63a5 ",Object(c.b)("inlineCode",{parentName:"p"},'import "github.com/panjf2000/gnet"'),"\uff0c\u7136\u540e\u8fd0\u884c ",Object(c.b)("inlineCode",{parentName:"p"},"go [build|run|test]")," \u81ea\u52a8\u4e0b\u8f7d\u548c\u6784\u5efa\u9700\u8981\u7684\u4f9d\u8d56\u5305\u3002"),Object(c.b)("h2",{id:"\u4f7f\u7528\u793a\u4f8b"},"\u4f7f\u7528\u793a\u4f8b"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u8be6\u7ec6\u7684\u6587\u6863\u5728\u8fd9\u91cc: ",Object(c.b)("a",Object(r.a)({parentName:"strong"},{href:"https://pkg.go.dev/github.com/panjf2000/gnet?tab=doc"}),"gnet \u63a5\u53e3\u6587\u6863"),"\uff0c\u4e0d\u8fc7\u4e0b\u9762\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b\u4f7f\u7528 ",Object(c.b)("inlineCode",{parentName:"strong"},"gnet")," \u7684\u7b80\u7565\u65b9\u6cd5\u3002")),Object(c.b)("p",null,"\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u6765\u6784\u5efa\u7f51\u7edc\u670d\u52a1\u5668\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u5b9e\u73b0 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.EventHandler"),"\u63a5\u53e3\u7136\u540e\u628a\u4f60\u5173\u5fc3\u7684\u4e8b\u4ef6\u51fd\u6570\u6ce8\u518c\u5230\u91cc\u9762\uff0c\u6700\u540e\u628a\u5b83\u8fde\u540c\u76d1\u542c\u5730\u5740\u4e00\u8d77\u4f20\u9012\u7ed9 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.Serve")," \u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002\u5728\u670d\u52a1\u5668\u5f00\u59cb\u5de5\u4f5c\u4e4b\u540e\uff0c\u6bcf\u4e00\u6761\u5230\u6765\u7684\u7f51\u7edc\u8fde\u63a5\u4f1a\u5728\u5404\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u4f20\u9012\uff0c\u5982\u679c\u4f60\u60f3\u5728\u67d0\u4e2a\u4e8b\u4ef6\u4e2d\u5173\u95ed\u67d0\u6761\u8fde\u63a5\u6216\u8005\u5173\u6389\u6574\u4e2a\u670d\u52a1\u5668\u7684\u8bdd\uff0c\u76f4\u63a5\u5728\u4e8b\u4ef6\u51fd\u6570\u91cc\u628a ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.Action")," \u8bbe\u7f6e\u6210 ",Object(c.b)("inlineCode",{parentName:"p"},"Close")," \u6216\u8005 ",Object(c.b)("inlineCode",{parentName:"p"},"Shutdown")," \u5c31\u884c\u4e86\u3002"),Object(c.b)("p",null,"Echo \u670d\u52a1\u5668\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7f51\u7edc\u670d\u52a1\u5668\uff0c\u628a\u5b83\u4f5c\u4e3a ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684\u5165\u95e8\u4f8b\u5b50\u5728\u518d\u5408\u9002\u4e0d\u8fc7\u4e86\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684 echo server\uff0c\u5b83\u76d1\u542c\u4e86 9000 \u7aef\u53e3\uff1a"),Object(c.b)("h3",{id:"\u4e0d\u5e26\u963b\u585e\u903b\u8f91\u7684-echo-\u670d\u52a1\u5668"},"\u4e0d\u5e26\u963b\u585e\u903b\u8f91\u7684 echo \u670d\u52a1\u5668"),Object(c.b)("details",null,Object(c.b)("summary",null," Old version(<=v1.0.0-rc.4)  "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n}\n\nfunc (es *echoServer) React(c gnet.Conn) (out []byte, action gnet.Action) {\n    out = c.Read()\n    c.ResetBuffer()\n    return\n}\n\nfunc main() {\n    echo := new(echoServer)\n    log.Fatal(gnet.Serve(echo, "tcp://:9000", gnet.WithMulticore(true)))\n}\n'))),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n}\n\nfunc (es *echoServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    out = frame\n    return\n}\n\nfunc main() {\n    echo := new(echoServer)\n    log.Fatal(gnet.Serve(echo, "tcp://:9000", gnet.WithMulticore(true)))\n}\n')),Object(c.b)("p",null,"\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u91cc ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5b9e\u4f8b\u53ea\u6ce8\u518c\u4e86\u4e00\u4e2a ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React")," \u4e8b\u4ef6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4e3b\u8981\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u4f1a\u5199\u5728\u8fd9\u4e2a\u4e8b\u4ef6\u65b9\u6cd5\u91cc\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5728\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u5199\u8fc7\u6765\u7684\u6570\u636e\u4e4b\u65f6\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u7684\u8f93\u5165\u53c2\u6570: ",Object(c.b)("inlineCode",{parentName:"p"},"frame")," \u5df2\u7ecf\u662f\u89e3\u7801\u8fc7\u540e\u7684\u4e00\u4e2a\u5b8c\u6574\u7684\u7f51\u7edc\u6570\u636e\u5305\uff0c\u4e00\u822c\u6765\u8bf4\u4f60\u9700\u8981\u5b9e\u73b0 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://pkg.go.dev/github.com/panjf2000/gnet?tab=doc#ICodec"}),"codec \u63a5\u53e3"),"\u4f5c\u4e3a\u4f60\u81ea\u5df1\u7684\u4e1a\u52a1\u7f16\u89e3\u7801\u5668\u6765\u5904\u7406 TCP \u7ec4\u5305\u548c\u5206\u5305\u7684\u95ee\u9898\uff0c\u5982\u679c\u4f60\u4e0d\u5b9e\u73b0\u90a3\u4e2a\u63a5\u53e3\u7684\u8bdd\uff0c\u90a3\u4e48 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5c06\u4f1a\u4f7f\u7528",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://pkg.go.dev/github.com/panjf2000/gnet?tab=doc#BuiltInFrameCodec"}),"\u9ed8\u8ba4\u7684 codec"),"\uff0c\u8fd9\u610f\u5473\u7740\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.React")," \u88ab\u89e6\u53d1\u8c03\u7528\u4e4b\u65f6\u8f93\u5165\u53c2\u6570: ",Object(c.b)("inlineCode",{parentName:"p"},"frame")," \u91cc\u5b58\u50a8\u7684\u662f\u6240\u6709\u7f51\u7edc\u6570\u636e\uff1a\u5305\u62ec\u6700\u65b0\u7684\u4ee5\u53ca\u8fd8\u5728 buffer \u91cc\u7684\u65e7\u6570\u636e\uff0c\u7136\u540e\u5904\u7406\u8f93\u5165\u6570\u636e\uff08\u8fd9\u91cc\u53ea\u662f\u628a\u6570\u636e echo \u56de\u53bb\uff09\u5e76\u4e14\u5728\u5904\u7406\u5b8c\u4e4b\u540e\u628a\u9700\u8981\u8f93\u51fa\u7684\u6570\u636e\u8d4b\u503c\u7ed9 ",Object(c.b)("inlineCode",{parentName:"p"},"out")," \u53d8\u91cf\u5e76\u8fd4\u56de\uff0c\u63a5\u7740\u8f93\u51fa\u7684\u6570\u636e\u4f1a\u7ecf\u8fc7\u7f16\u7801\uff0c\u6700\u540e\u88ab\u5199\u56de\u5ba2\u6237\u7aef\u3002"),Object(c.b)("h3",{id:"\u5e26\u963b\u585e\u903b\u8f91\u7684-echo-\u670d\u52a1\u5668"},"\u5e26\u963b\u585e\u903b\u8f91\u7684 echo \u670d\u52a1\u5668"),Object(c.b)("details",null,Object(c.b)("summary",null," Old version(<=v1.0.0-rc.4)  "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n    "time"\n\n    "github.com/panjf2000/gnet"\n    "github.com/panjf2000/gnet/pool/goroutine"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n    pool *goroutine.Pool\n}\n\nfunc (es *echoServer) React(c gnet.Conn) (out []byte, action gnet.Action) {\n    data := append([]byte{}, c.Read()...)\n    c.ResetBuffer()\n\n    // Use ants pool to unblock the event-loop.\n    _ = es.pool.Submit(func() {\n        time.Sleep(1 * time.Second)\n        c.AsyncWrite(data)\n    })\n\n    return\n}\n\nfunc main() {\n    p := goroutine.Default()\n    defer p.Release()\n    \n    echo := &echoServer{pool: p}\n    log.Fatal(gnet.Serve(echo, "tcp://:9000", gnet.WithMulticore(true)))\n}\n'))),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n    "time"\n\n    "github.com/panjf2000/gnet"\n    "github.com/panjf2000/gnet/pool/goroutine"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n    pool *goroutine.Pool\n}\n\nfunc (es *echoServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    data := append([]byte{}, frame...)\n\n    // Use ants pool to unblock the event-loop.\n    _ = es.pool.Submit(func() {\n        time.Sleep(1 * time.Second)\n        c.AsyncWrite(data)\n    })\n\n    return\n}\n\nfunc main() {\n    p := goroutine.Default()\n    defer p.Release()\n\n    echo := &echoServer{pool: p}\n    log.Fatal(gnet.Serve(echo, "tcp://:9000", gnet.WithMulticore(true)))\n}\n')),Object(c.b)("p",null,"\u6b63\u5982\u6211\u5728\u300e\u4e3b\u4ece\u591a Reactors + \u7ebf\u7a0b/Go\u7a0b\u6c60\u300f\u90a3\u4e00\u8282\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u903b\u8f91\u91cc\u5305\u542b\u963b\u585e\u4ee3\u7801\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u628a\u8fd9\u4e9b\u963b\u585e\u4ee3\u7801\u53d8\u6210\u975e\u963b\u585e\u7684\uff0c\u6bd4\u5982\u901a\u8fc7\u628a\u8fd9\u90e8\u5206\u4ee3\u7801\u653e\u5230\u72ec\u7acb\u7684 goroutines \u53bb\u8fd0\u884c\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5982\u679c\u4f60\u7684\u670d\u52a1\u5668\u5904\u7406\u7684\u6d41\u91cf\u8db3\u591f\u7684\u5927\uff0c\u90a3\u4e48\u8fd9\u79cd\u505a\u6cd5\u5c06\u4f1a\u5bfc\u81f4\u521b\u5efa\u5927\u91cf\u7684 goroutines \u6781\u5927\u5730\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u6240\u4ee5\u6211\u4e00\u822c\u5efa\u8bae\u4f60\u7528 goroutine pool \u6765\u505a goroutines \u7684\u590d\u7528\u548c\u7ba1\u7406\uff0c\u4ee5\u53ca\u8282\u7701\u7cfb\u7edf\u8d44\u6e90\u3002"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u5404\u79cd gnet \u793a\u4f8b:")),Object(c.b)("details",null,Object(c.b)("summary",null," TCP Echo Server "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "flag"\n    "fmt"\n    "log"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n}\n\nfunc (es *echoServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("Echo server is listening on %s (multi-cores: %t, loops: %d)\\n",\n        srv.Addr.String(), srv.Multicore, srv.NumEventLoop)\n    return\n}\n\nfunc (es *echoServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    // Echo synchronously.\n    out = frame\n    return\n\n    /*\n        // Echo asynchronously.\n        data := append([]byte{}, frame...)\n        go func() {\n            time.Sleep(time.Second)\n            c.AsyncWrite(data)\n        }()\n        return\n    */\n}\n\nfunc main() {\n    var port int\n    var multicore, reuseport bool\n\n    // Example command: go run echo.go --port 9000 --multicore=true --reuseport=true\n    flag.IntVar(&port, "port", 9000, "--port 9000")\n    flag.BoolVar(&multicore, "multicore", false, "--multicore true")\n    flag.BoolVar(&reuseport, "reuseport", false, "--reuseport true")\n    flag.Parse()\n    echo := new(echoServer)\n    log.Fatal(gnet.Serve(echo, fmt.Sprintf("tcp://:%d", port), gnet.WithMulticore(multicore), gnet.WithReusePort(reuseport)))\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," UDP Echo Server "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "flag"\n    "fmt"\n    "log"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n}\n\nfunc (es *echoServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("UDP Echo server is listening on %s (multi-cores: %t, loops: %d)\\n",\n        srv.Addr.String(), srv.Multicore, srv.NumEventLoop)\n    return\n}\n\nfunc (es *echoServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    // Echo synchronously.\n    out = frame\n    return\n\n    /*\n        // Echo asynchronously.\n        data := append([]byte{}, frame...)\n        go func() {\n            time.Sleep(time.Second)\n            c.SendTo(data)\n        }()\n        return\n    */\n}\n\nfunc main() {\n    var port int\n    var multicore, reuseport bool\n\n    // Example command: go run echo.go --port 9000 --multicore=true --reuseport=true\n    flag.IntVar(&port, "port", 9000, "--port 9000")\n    flag.BoolVar(&multicore, "multicore", false, "--multicore true")\n    flag.BoolVar(&reuseport, "reuseport", false, "--reuseport true")\n    flag.Parse()\n    echo := new(echoServer)\n    log.Fatal(gnet.Serve(echo, fmt.Sprintf("udp://:%d", port), gnet.WithMulticore(multicore), gnet.WithReusePort(reuseport)))\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," UDS Echo Server "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "flag"\n    "fmt"\n    "log"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype echoServer struct {\n    *gnet.EventServer\n}\n\nfunc (es *echoServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("Echo server is listening on %s (multi-cores: %t, loops: %d)\\n",\n        srv.Addr.String(), srv.Multicore, srv.NumEventLoop)\n    return\n}\n\nfunc (es *echoServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    // Echo synchronously.\n    out = frame\n    return\n\n    /*\n        // Echo asynchronously.\n        data := append([]byte{}, frame...)\n        go func() {\n            time.Sleep(time.Second)\n            c.AsyncWrite(data)\n        }()\n        return\n    */\n}\n\nfunc main() {\n    var addr string\n    var multicore bool\n\n    // Example command: go run echo.go --sock echo.sock --multicore=true\n    flag.StringVar(&addr, "sock", "echo.sock", "--port 9000")\n    flag.BoolVar(&multicore, "multicore", false, "--multicore true")\n    flag.Parse()\n\n    echo := new(echoServer)\n    log.Fatal(gnet.Serve(echo, fmt.Sprintf("unix://%s", addr), gnet.WithMulticore(multicore)))\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," HTTP Server "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "flag"\n    "fmt"\n    "log"\n    "strconv"\n    "strings"\n    "time"\n    "unsafe"\n\n    "github.com/panjf2000/gnet"\n)\n\nvar res string\n\ntype request struct {\n    proto, method string\n    path, query   string\n    head, body    string\n    remoteAddr    string\n}\n\ntype httpServer struct {\n    *gnet.EventServer\n}\n\nvar (\n    errMsg      = "Internal Server Error"\n    errMsgBytes = []byte(errMsg)\n)\n\ntype httpCodec struct {\n    req request\n}\n\nfunc (hc *httpCodec) Encode(c gnet.Conn, buf []byte) (out []byte, err error) {\n    if c.Context() == nil {\n        return buf, nil\n    }\n    return appendResp(out, "500 Error", "", errMsg+"\\n"), nil\n}\n\nfunc (hc *httpCodec) Decode(c gnet.Conn) (out []byte, err error) {\n    buf := c.Read()\n    c.ResetBuffer()\n\n    // process the pipeline\n    var leftover []byte\npipeline:\n    leftover, err = parseReq(buf, &hc.req)\n    // bad thing happened\n    if err != nil {\n        c.SetContext(err)\n        return nil, err\n    } else if len(leftover) == len(buf) {\n        // request not ready, yet\n        return\n    }\n    out = appendHandle(out, res)\n    buf = leftover\n    goto pipeline\n}\n\nfunc (hs *httpServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("HTTP server is listening on %s (multi-cores: %t, loops: %d)\\n",\n        srv.Addr.String(), srv.Multicore, srv.NumEventLoop)\n    return\n}\n\nfunc (hs *httpServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    if c.Context() != nil {\n        // bad thing happened\n        out = errMsgBytes\n        action = gnet.Close\n        return\n    }\n    // handle the request\n    out = frame\n    return\n}\n\nfunc main() {\n    var port int\n    var multicore bool\n\n    // Example command: go run http.go --port 8080 --multicore=true\n    flag.IntVar(&port, "port", 8080, "server port")\n    flag.BoolVar(&multicore, "multicore", true, "multicore")\n    flag.Parse()\n\n    res = "Hello World!\\r\\n"\n\n    http := new(httpServer)\n    hc := new(httpCodec)\n\n    // Start serving!\n    log.Fatal(gnet.Serve(http, fmt.Sprintf("tcp://:%d", port), gnet.WithMulticore(multicore), gnet.WithCodec(hc)))\n}\n\n// appendHandle handles the incoming request and appends the response to\n// the provided bytes, which is then returned to the caller.\nfunc appendHandle(b []byte, res string) []byte {\n    return appendResp(b, "200 OK", "", res)\n}\n\n// appendResp will append a valid http response to the provide bytes.\n// The status param should be the code plus text such as "200 OK".\n// The head parameter should be a series of lines ending with "\\r\\n" or empty.\nfunc appendResp(b []byte, status, head, body string) []byte {\n    b = append(b, "HTTP/1.1"...)\n    b = append(b, \' \')\n    b = append(b, status...)\n    b = append(b, \'\\r\', \'\\n\')\n    b = append(b, "Server: gnet\\r\\n"...)\n    b = append(b, "Date: "...)\n    b = time.Now().AppendFormat(b, "Mon, 02 Jan 2006 15:04:05 GMT")\n    b = append(b, \'\\r\', \'\\n\')\n    if len(body) > 0 {\n        b = append(b, "Content-Length: "...)\n        b = strconv.AppendInt(b, int64(len(body)), 10)\n        b = append(b, \'\\r\', \'\\n\')\n    }\n    b = append(b, head...)\n    b = append(b, \'\\r\', \'\\n\')\n    if len(body) > 0 {\n        b = append(b, body...)\n    }\n    return b\n}\n\nfunc b2s(b []byte) string {\n    return *(*string)(unsafe.Pointer(&b))\n}\n\n// parseReq is a very simple http request parser. This operation\n// waits for the entire payload to be buffered before returning a\n// valid request.\nfunc parseReq(data []byte, req *request) (leftover []byte, err error) {\n    sdata := b2s(data)\n    var i, s int\n    var head string\n    var clen int\n    q := -1\n    // method, path, proto line\n    for ; i < len(sdata); i++ {\n        if sdata[i] == \' \' {\n            req.method = sdata[s:i]\n            for i, s = i+1, i+1; i < len(sdata); i++ {\n                if sdata[i] == \'?\' && q == -1 {\n                    q = i - s\n                } else if sdata[i] == \' \' {\n                    if q != -1 {\n                        req.path = sdata[s:q]\n                        req.query = req.path[q+1 : i]\n                    } else {\n                        req.path = sdata[s:i]\n                    }\n                    for i, s = i+1, i+1; i < len(sdata); i++ {\n                        if sdata[i] == \'\\n\' && sdata[i-1] == \'\\r\' {\n                            req.proto = sdata[s:i]\n                            i, s = i+1, i+1\n                            break\n                        }\n                    }\n                    break\n                }\n            }\n            break\n        }\n    }\n    if req.proto == "" {\n        return data, fmt.Errorf("malformed request")\n    }\n    head = sdata[:s]\n    for ; i < len(sdata); i++ {\n        if i > 1 && sdata[i] == \'\\n\' && sdata[i-1] == \'\\r\' {\n            line := sdata[s : i-1]\n            s = i + 1\n            if line == "" {\n                req.head = sdata[len(head)+2 : i+1]\n                i++\n                if clen > 0 {\n                    if len(sdata[i:]) < clen {\n                        break\n                    }\n                    req.body = sdata[i : i+clen]\n                    i += clen\n                }\n                return data[i:], nil\n            }\n            if strings.HasPrefix(line, "Content-Length:") {\n                n, err := strconv.ParseInt(strings.TrimSpace(line[len("Content-Length:"):]), 10, 64)\n                if err == nil {\n                    clen = int(n)\n                }\n            }\n        }\n    }\n    // not enough data\n    return data, nil\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," Push Server "),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "flag"\n    "fmt"\n    "log"\n    "sync"\n    "time"\n\n    "github.com/panjf2000/gnet"\n)\n\ntype pushServer struct {\n    *gnet.EventServer\n    tick             time.Duration\n    connectedSockets sync.Map\n}\n\nfunc (ps *pushServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("Push server is listening on %s (multi-cores: %t, loops: %d), "+\n        "pushing data every %s ...\\n", srv.Addr.String(), srv.Multicore, srv.NumEventLoop, ps.tick.String())\n    return\n}\n\nfunc (ps *pushServer) OnOpened(c gnet.Conn) (out []byte, action gnet.Action) {\n    log.Printf("Socket with addr: %s has been opened...\\n", c.RemoteAddr().String())\n    ps.connectedSockets.Store(c.RemoteAddr().String(), c)\n    return\n}\n\nfunc (ps *pushServer) OnClosed(c gnet.Conn, err error) (action gnet.Action) {\n    log.Printf("Socket with addr: %s is closing...\\n", c.RemoteAddr().String())\n    ps.connectedSockets.Delete(c.RemoteAddr().String())\n    return\n}\n\nfunc (ps *pushServer) Tick() (delay time.Duration, action gnet.Action) {\n    log.Println("It\'s time to push data to clients!!!")\n    ps.connectedSockets.Range(func(key, value interface{}) bool {\n        addr := key.(string)\n        c := value.(gnet.Conn)\n        c.AsyncWrite([]byte(fmt.Sprintf("heart beating to %s\\n", addr)))\n        return true\n    })\n    delay = ps.tick\n    return\n}\n\nfunc (ps *pushServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    out = frame\n    return\n}\n\nfunc main() {\n    var port int\n    var multicore bool\n    var interval time.Duration\n    var ticker bool\n\n    // Example command: go run push.go --port 9000 --tick 1s --multicore=true\n    flag.IntVar(&port, "port", 9000, "server port")\n    flag.BoolVar(&multicore, "multicore", true, "multicore")\n    flag.DurationVar(&interval, "tick", 0, "pushing tick")\n    flag.Parse()\n    if interval > 0 {\n        ticker = true\n    }\n    push := &pushServer{tick: interval}\n    log.Fatal(gnet.Serve(push, fmt.Sprintf("tcp://:%d", port), gnet.WithMulticore(multicore), gnet.WithTicker(ticker)))\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," Codec Client/Server "),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Client:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'// Reference https://github.com/smallnest/goframe/blob/master/_examples/goclient/client.go\n\npackage main\n\nimport (\n    "encoding/binary"\n    "fmt"\n    "net"\n\n    "github.com/smallnest/goframe"\n)\n\nfunc main() {\n    conn, err := net.Dial("tcp", "127.0.0.1:9000")\n    if err != nil {\n        panic(err)\n    }\n    defer conn.Close()\n\n    encoderConfig := goframe.EncoderConfig{\n        ByteOrder:                       binary.BigEndian,\n        LengthFieldLength:               4,\n        LengthAdjustment:                0,\n        LengthIncludesLengthFieldLength: false,\n    }\n\n    decoderConfig := goframe.DecoderConfig{\n        ByteOrder:           binary.BigEndian,\n        LengthFieldOffset:   0,\n        LengthFieldLength:   4,\n        LengthAdjustment:    0,\n        InitialBytesToStrip: 4,\n    }\n\n    fc := goframe.NewLengthFieldBasedFrameConn(encoderConfig, decoderConfig, conn)\n    err = fc.WriteFrame([]byte("hello"))\n    if err != nil {\n        panic(err)\n    }\n    err = fc.WriteFrame([]byte("world"))\n    if err != nil {\n        panic(err)\n    }\n\n    buf, err := fc.ReadFrame()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println("received: ", string(buf))\n    buf, err = fc.ReadFrame()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println("received: ", string(buf))\n}\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Server:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "encoding/binary"\n    "flag"\n    "fmt"\n    "log"\n    "time"\n\n    "github.com/panjf2000/gnet"\n    "github.com/panjf2000/gnet/pool/goroutine"\n)\n\ntype codecServer struct {\n    *gnet.EventServer\n    addr       string\n    multicore  bool\n    async      bool\n    codec      gnet.ICodec\n    workerPool *goroutine.Pool\n}\n\nfunc (cs *codecServer) OnInitComplete(srv gnet.Server) (action gnet.Action) {\n    log.Printf("Test codec server is listening on %s (multi-cores: %t, loops: %d)\\n",\n        srv.Addr.String(), srv.Multicore, srv.NumEventLoop)\n    return\n}\n\nfunc (cs *codecServer) React(frame []byte, c gnet.Conn) (out []byte, action gnet.Action) {\n    if cs.async {\n        data := append([]byte{}, frame...)\n        _ = cs.workerPool.Submit(func() {\n            c.AsyncWrite(data)\n        })\n        return\n    }\n    out = frame\n    return\n}\n\nfunc testCodecServe(addr string, multicore, async bool, codec gnet.ICodec) {\n    var err error\n    if codec == nil {\n        encoderConfig := gnet.EncoderConfig{\n            ByteOrder:                       binary.BigEndian,\n            LengthFieldLength:               4,\n            LengthAdjustment:                0,\n            LengthIncludesLengthFieldLength: false,\n        }\n        decoderConfig := gnet.DecoderConfig{\n            ByteOrder:           binary.BigEndian,\n            LengthFieldOffset:   0,\n            LengthFieldLength:   4,\n            LengthAdjustment:    0,\n            InitialBytesToStrip: 4,\n        }\n        codec = gnet.NewLengthFieldBasedFrameCodec(encoderConfig, decoderConfig)\n    }\n    cs := &codecServer{addr: addr, multicore: multicore, async: async, codec: codec, workerPool: goroutine.Default()}\n    err = gnet.Serve(cs, addr, gnet.WithMulticore(multicore), gnet.WithTCPKeepAlive(time.Minute*5), gnet.WithCodec(codec))\n    if err != nil {\n        panic(err)\n    }\n}\n\nfunc main() {\n    var port int\n    var multicore bool\n\n    // Example command: go run server.go --port 9000 --multicore=true\n    flag.IntVar(&port, "port", 9000, "server port")\n    flag.BoolVar(&multicore, "multicore", true, "multicore")\n    flag.Parse()\n    addr := fmt.Sprintf("tcp://:%d", port)\n    testCodecServe(addr, multicore, false, nil)\n}\n'))),Object(c.b)("details",null,Object(c.b)("summary",null," Custom Codec Demo with Client/Server "),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"protocol intro:")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'// CustomLengthFieldProtocol \n// \u6d4b\u8bd5\u7528\u7684\u534f\u8bae\uff0c\u7531\u4ee5\u4e0b\u5b57\u6bb5\u6784\u6210:\n// version+actionType+dataLength+data\n// \u5176\u4e2d version+actionType+dataLength \u4e3a header\uff0cdata \u4e3a payload\ntype CustomLengthFieldProtocol struct {\n    Version    uint16\n    ActionType uint16\n    DataLength uint32\n    Data       []byte\n}\n\n\n// Encode ...\nfunc (cc *CustomLengthFieldProtocol) Encode(c gnet.Conn, buf []byte) ([]byte, error) {\n    result := make([]byte, 0)\n\n    buffer := bytes.NewBuffer(result)\n\n    // \u53d6\u51fa`React()`\u65f6\u5b58\u5165\u7684\u53c2\u6570\n    item := c.Context().(CustomLengthFieldProtocol)\n\n\n    if err := binary.Write(buffer, binary.BigEndian, item.Version); err != nil {\n        s := fmt.Sprintf("Pack version error , %v", err)\n        return nil, errors.New(s)\n    }\n\n    if err := binary.Write(buffer, binary.BigEndian, item.ActionType); err != nil {\n        s := fmt.Sprintf("Pack type error , %v", err)\n        return nil, errors.New(s)\n    }\n    dataLen := uint32(len(buf))\n    if err := binary.Write(buffer, binary.BigEndian, dataLen); err != nil {\n        s := fmt.Sprintf("Pack datalength error , %v", err)\n        return nil, errors.New(s)\n    }\n    if dataLen > 0 {\n        if err := binary.Write(buffer, binary.BigEndian, buf); err != nil {\n            s := fmt.Sprintf("Pack data error , %v", err)\n            return nil, errors.New(s)\n        }\n    }\n\n    return buffer.Bytes(), nil\n}\n\n// Decode ...\nfunc (cc *CustomLengthFieldProtocol) Decode(c gnet.Conn) ([]byte, error) {\n    // parse header\n    headerLen := DefaultHeadLength // uint16+uint16+uint32\n    if size, header := c.ReadN(headerLen); size == headerLen {\n        byteBuffer := bytes.NewBuffer(header)\n        var pbVersion, actionType uint16\n        var dataLength uint32\n        binary.Read(byteBuffer, binary.BigEndian, &pbVersion)\n        binary.Read(byteBuffer, binary.BigEndian, &actionType)\n        binary.Read(byteBuffer, binary.BigEndian, &dataLength)\n        // to check the protocol version and actionType,\n        // reset buffer if the version or actionType is not correct\n        if pbVersion != DefaultProtocolVersion || isCorrectAction(actionType) == false {\n            c.ResetBuffer()\n            log.Println("not normal protocol:", pbVersion, DefaultProtocolVersion, actionType, dataLength)\n            return nil, errors.New("not normal protocol")\n        }\n        // parse payload\n        dataLen := int(dataLength) // max int32 can contain 210MB payload\n        protocolLen := headerLen + dataLen\n        if dataSize, data := c.ReadN(protocolLen); dataSize == protocolLen {\n            c.ShiftN(protocolLen)\n\n            // return the payload of the data\n            return data[headerLen:], nil\n        }\n        return nil, errors.New("not enough payload data")\n\n    }\n    return nil, errors.New("not enough header data")\n}\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Client/Server:"),"\n",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/gnet-io/gnet-examples/tree/master/examples/custom_codec"}),"\u67e5\u770b\u6e90\u7801"),".")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u66f4\u8be6\u7ec6\u7684\u4ee3\u7801\u5728\u8fd9\u91cc: ",Object(c.b)("a",Object(r.a)({parentName:"strong"},{href:"https://github.com/gnet-io/gnet-examples"}),"\u5168\u90e8 gnet \u793a\u4f8b"),"\u3002")),Object(c.b)("h2",{id:"io-\u4e8b\u4ef6"},"I/O \u4e8b\u4ef6"),Object(c.b)("p",null," ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u76ee\u524d\u652f\u6301\u7684 I/O \u4e8b\u4ef6\u5982\u4e0b\uff1a"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.OnInitComplete")," \u5f53 server \u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u8c03\u7528\u3002"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.OnOpened")," \u5f53\u8fde\u63a5\u88ab\u6253\u5f00\u7684\u65f6\u5019\u8c03\u7528\u3002"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.OnClosed")," \u5f53\u8fde\u63a5\u88ab\u5173\u95ed\u7684\u4e4b\u540e\u8c03\u7528\u3002"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.React")," \u5f53 server \u7aef\u63a5\u6536\u5230\u4ece client \u7aef\u53d1\u9001\u6765\u7684\u6570\u636e\u7684\u65f6\u5019\u8c03\u7528\u3002\uff08\u4f60\u7684\u6838\u5fc3\u4e1a\u52a1\u4ee3\u7801\u4e00\u822c\u662f\u5199\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\uff09"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.Tick")," \u670d\u52a1\u5668\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u4e00\u6b21\uff0c\u4e4b\u540e\u5c31\u4ee5\u7ed9\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5b9a\u65f6\u8c03\u7528\u4e00\u6b21\uff0c\u662f\u4e00\u4e2a\u5b9a\u65f6\u5668\u65b9\u6cd5\u3002"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.PreWrite")," \u9884\u5148\u5199\u6570\u636e\u65b9\u6cd5\uff0c\u5728 server \u7aef\u5199\u6570\u636e\u56de client \u7aef\u4e4b\u524d\u8c03\u7528\u3002")),Object(c.b)("h2",{id:"\u5b9a\u65f6\u5668"},"\u5b9a\u65f6\u5668"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"EventHandler.Tick")," \u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u89e6\u53d1\u4e00\u6b21\uff0c\u95f4\u9694\u65f6\u95f4\u4f60\u53ef\u4ee5\u81ea\u5df1\u63a7\u5236\uff0c\u8bbe\u5b9a\u8fd4\u56de\u7684 ",Object(c.b)("inlineCode",{parentName:"p"},"delay")," \u53d8\u91cf\u5c31\u884c\u3002"),Object(c.b)("p",null,"\u5b9a\u65f6\u5668\u7684\u7b2c\u4e00\u6b21\u89e6\u53d1\u662f\u5728 gnet server \u542f\u52a8\u4e4b\u540e\uff0c\u5982\u679c\u4f60\u8981\u8bbe\u7f6e\u5b9a\u65f6\u5668\uff0c\u522b\u5fd8\u4e86\u8bbe\u7f6e option \u9009\u9879\uff1a",Object(c.b)("inlineCode",{parentName:"p"},"WithTicker(true)"),"\u3002"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'events.Tick = func() (delay time.Duration, action Action){\n    log.Printf("tick")\n    delay = time.Second\n    return\n}\n')),Object(c.b)("h2",{id:"udp-\u652f\u6301"},"UDP \u652f\u6301"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u652f\u6301 UDP \u534f\u8bae\uff0c\u6240\u4ee5\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.Serve")," \u91cc\u7ed1\u5b9a\u5141\u8bb8\u7ed1\u5b9a UDP \u5730\u5740\uff0c",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684 UDP \u652f\u6301\u6709\u5982\u4e0b\u7684\u7279\u6027\uff1a"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"\u7f51\u7edc\u6570\u636e\u7684\u8bfb\u5165\u548c\u5199\u51fa\u4e0d\u505a\u7f13\u51b2\uff0c\u4f1a\u4e00\u6b21\u6027\u8bfb\u5199\u5ba2\u6237\u7aef\u3002"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.OnOpened")," \u548c ",Object(c.b)("inlineCode",{parentName:"li"},"EventHandler.OnClosed")," \u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u5728 UDP \u4e0b\u4e0d\u53ef\u7528\uff0c\u552f\u4e00\u53ef\u7528\u7684\u4e8b\u4ef6\u662f ",Object(c.b)("inlineCode",{parentName:"li"},"React"),"\u3002"),Object(c.b)("li",{parentName:"ul"},"TCP \u91cc\u7684\u5f02\u6b65\u5199\u64cd\u4f5c\u662f ",Object(c.b)("inlineCode",{parentName:"li"},"AsyncWrite([]byte)")," \u65b9\u6cd5\uff0c\u800c\u5728 UDP \u91cc\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f  ",Object(c.b)("inlineCode",{parentName:"li"},"SendTo([]byte)"),"\u3002")),Object(c.b)("h2",{id:"unix-domain-socket-\u652f\u6301"},"Unix Domain Socket \u652f\u6301"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet"),' \u8fd8\u652f\u6301 UDS(Unix Domain Socket) \u673a\u5236\uff0c\u53ea\u9700\u8981\u628a\u7c7b\u4f3c "unix://xxx" \u7684 UDS \u5730\u5740\u4f20\u53c2\u7ed9 ',Object(c.b)("inlineCode",{parentName:"p"},"gnet.Serve")," \u51fd\u6570\u7ed1\u5b9a\u5c31\u884c\u4e86\u3002"),Object(c.b)("p",null,"\u5728 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u91cc\u4f7f\u7528 UDS \u548c\u4f7f\u7528 TCP \u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u6240\u6709 TCP \u534f\u8bae\u4e0b\u53ef\u4ee5\u4f7f\u7528\u7684\u4e8b\u4ef6\u51fd\u6570\u90fd\u53ef\u4ee5\u5728 UDS \u4e2d\u4f7f\u7528\u3002"),Object(c.b)("h2",{id:"\u4f7f\u7528\u591a\u6838"},"\u4f7f\u7528\u591a\u6838"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet.WithMulticore(true)")," \u53c2\u6570\u6307\u5b9a\u4e86 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u662f\u5426\u4f1a\u4f7f\u7528\u591a\u6838\u6765\u8fdb\u884c\u670d\u52a1\uff0c\u5982\u679c\u662f ",Object(c.b)("inlineCode",{parentName:"p"},"true")," \u7684\u8bdd\u5c31\u4f1a\u4f7f\u7528\u591a\u6838\uff0c\u5426\u5219\u5c31\u662f\u5355\u6838\u8fd0\u884c\uff0c\u5229\u7528\u7684\u6838\u5fc3\u6570\u4e00\u822c\u662f\u673a\u5668\u7684 CPU \u6570\u91cf\u3002"),Object(c.b)("h2",{id:"\u8d1f\u8f7d\u5747\u8861"},"\u8d1f\u8f7d\u5747\u8861"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u76ee\u524d\u652f\u6301\u4e09\u79cd\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff1a",Object(c.b)("inlineCode",{parentName:"p"},"Round-Robin(\u8f6e\u8be2)"),"\u3001",Object(c.b)("inlineCode",{parentName:"p"},"Source-Addr-Hash(\u6e90\u5730\u5740\u54c8\u5e0c)")," \u548c ",Object(c.b)("inlineCode",{parentName:"p"},"Least-Connections(\u6700\u5c11\u8fde\u63a5\u6570)"),"\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012 functional option \u7684 ",Object(c.b)("inlineCode",{parentName:"p"},"LB")," (RoundRobin/LeastConnections/SourceAddrHash) \u7684\u503c\u7ed9 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet.Serve")," \u6765\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002"),Object(c.b)("p",null,"\u5982\u679c\u6ca1\u6709\u663e\u793a\u5730\u6307\u5b9a\uff0c\u90a3\u4e48 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5c06\u4f1a\u4f7f\u7528 ",Object(c.b)("inlineCode",{parentName:"p"},"Round-Robin")," \u4f5c\u4e3a\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002"),Object(c.b)("h2",{id:"so_reuseport-\u7aef\u53e3\u590d\u7528"},"SO_REUSEPORT \u7aef\u53e3\u590d\u7528"),Object(c.b)("p",null,"\u670d\u52a1\u5668\u652f\u6301 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://lwn.net/Articles/542629/"}),"SO_REUSEPORT")," \u7aef\u53e3\u590d\u7528\u7279\u6027\uff0c\u5141\u8bb8\u591a\u4e2a sockets \u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\uff0c\u7136\u540e\u5185\u6838\u4f1a\u5e2e\u4f60\u505a\u597d\u8d1f\u8f7d\u5747\u8861\uff0c\u6bcf\u6b21\u53ea\u5524\u9192\u4e00\u4e2a socket \u6765\u5904\u7406 ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," \u8bf7\u6c42\uff0c\u907f\u514d\u60ca\u7fa4\u6548\u5e94\u3002"),Object(c.b)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u4e0d\u4f1a\u6709\u60ca\u7fa4\u6548\u5e94\uff0c\u56e0\u4e3a ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u9ed8\u8ba4\u7684\u7f51\u7edc\u6a21\u578b\u662f\u4e3b\u4ece\u591a Reactors\uff0c\u53ea\u4f1a\u6709\u4e00\u4e2a\u4e3b reactor \u5728\u76d1\u542c\u7aef\u53e3\u4ee5\u53ca\u63a5\u6536\u65b0\u8fde\u63a5\u3002\u6240\u4ee5\uff0c\u5f00\u4e0d\u5f00\u542f ",Object(c.b)("inlineCode",{parentName:"p"},"SO_REUSEPORT")," \u9009\u9879\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u53ea\u662f\u5f00\u542f\u4e86\u8fd9\u4e2a\u9009\u9879\u4e4b\u540e ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684\u7f51\u7edc\u6a21\u578b\u5c06\u4f1a\u5207\u6362\u6210 ",Object(c.b)("inlineCode",{parentName:"p"},"evio")," \u7684\u65e7\u7f51\u7edc\u6a21\u578b\uff0c\u8fd9\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u3002"),Object(c.b)("p",null,"\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd\u4e5f\u5f88\u7b80\u5355\uff0c\u4f7f\u7528 functional options \u8bbe\u7f6e\u4e00\u4e0b\u5373\u53ef\uff1a"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'gnet.Serve(events, "tcp://:9000", gnet.WithMulticore(true), gnet.WithReusePort(true)))\n')),Object(c.b)("h2",{id:"\u591a\u79cd\u5185\u7f6e\u7684-tcp-\u6d41\u7f16\u89e3\u7801\u5668"},"\u591a\u79cd\u5185\u7f6e\u7684 TCP \u6d41\u7f16\u89e3\u7801\u5668"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u5185\u7f6e\u4e86\u591a\u79cd\u7528\u4e8e TCP \u6d41\u5206\u5305\u7684\u7f16\u89e3\u7801\u5668\u3002"),Object(c.b)("p",null,"\u76ee\u524d\u4e00\u5171\u5b9e\u73b0\u4e86 4 \u79cd\u5e38\u89c1\u7684\u7f16\u89e3\u7801\u5668\uff1aLineBasedFrameCodec, DelimiterBasedFrameCodec, FixedLengthFrameCodec \u548c LengthFieldBasedFrameCodec\uff0c\u57fa\u672c\u4e0a\u80fd\u6ee1\u8db3\u5927\u591a\u6570\u5e94\u7528\u573a\u666f\u7684\u9700\u6c42\u4e86\uff1b\u800c\u4e14 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u8fd8\u5141\u8bb8\u7528\u6237\u5b9e\u73b0\u81ea\u5df1\u7684\u7f16\u89e3\u7801\u5668\uff1a\u53ea\u9700\u8981\u5b9e\u73b0 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://pkg.go.dev/github.com/panjf2000/gnet?tab=doc#ICodec"}),"gnet.ICodec")," \u63a5\u53e3\uff0c\u5e76\u901a\u8fc7 functional options \u66ff\u6362\u6389\u5185\u90e8\u9ed8\u8ba4\u7684\u7f16\u89e3\u7801\u5668\u5373\u53ef\u3002"),Object(c.b)("p",null,"\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f7f\u7528\u7f16\u89e3\u7801\u5668\u5bf9 TCP \u6d41\u5206\u5305\u7684",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/gnet-io/gnet-examples/tree/master/examples/codec"}),"\u4f8b\u5b50"),"\u3002"),Object(c.b)("h1",{id:"-\u6027\u80fd\u6d4b\u8bd5"},"\ud83d\udcca \u6027\u80fd\u6d4b\u8bd5"),Object(c.b)("h2",{id:"techempower-\u6027\u80fd\u6d4b\u8bd5"},"TechEmpower \u6027\u80fd\u6d4b\u8bd5"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),"# \u786c\u4ef6\u73af\u5883\nCPU: 28 HT Cores Intel(R) Xeon(R) Gold 5120 CPU @ 2.20GHz\nMem: 32GB RAM\nOS : Ubuntu 18.04.3 4.15.0-88-generic #88-Ubuntu\nNet: Switched 10-gigabit ethernet\nGo : go1.14.x linux/amd64\n")),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/benchmark/techempower-all.jpg",alt:"All language"}))),Object(c.b)("p",null,"\u8fd9\u662f\u5305\u542b\u5168\u90e8\u7f16\u7a0b\u8bed\u8a00\u6846\u67b6\u7684\u6027\u80fd\u6392\u540d",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"\u524d 50"))," \u7684\u7ed3\u679c\uff0c\u603b\u699c\u5355\u5305\u542b\u4e86\u5168\u4e16\u754c\u5171\u8ba1 ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"422 \u4e2a\u6846\u67b6")),"\uff0c\u5176\u4e2d ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u6392\u540d",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"\u7b2c\u4e8c")),"\u3002"),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/benchmark/techempower-go.png",alt:"Golang"}))),Object(c.b)("p",null,"\u8fd9\u662f Go \u8bed\u8a00\u5206\u7c7b\u4e0b\u7684\u5168\u90e8\u6392\u540d\uff0c",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u8d85\u8d8a\u4e86\u5176\u4ed6\u6240\u6709\u6846\u67b6\uff0c\u4f4d\u5217\u7b2c\u4e00\uff0c\u662f",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"\u6700\u5feb")),"\u7684 Go \u7f51\u7edc\u6846\u67b6\u3002"),Object(c.b)("p",null,"\u5b8c\u6574\u7684\u6392\u884c\u53ef\u4ee5\u901a\u8fc7 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.techempower.com/benchmarks/#section=test&runid=53c6220a-e110-466c-a333-2e879fea21ad&hw=ph&test=plaintext"}),"TechEmpower Plaintext Benchmark")," \u67e5\u770b\u3002"),Object(c.b)("h2",{id:"\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u5e93\u6027\u80fd\u5bf9\u6bd4"},"\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u5e93\u6027\u80fd\u5bf9\u6bd4"),Object(c.b)("h2",{id:"linux-epoll"},"Linux (epoll)"),Object(c.b)("h3",{id:"\u7cfb\u7edf\u53c2\u6570"},"\u7cfb\u7edf\u53c2\u6570"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),"# Machine information\n        OS : Ubuntu 18.04/x86_64\n       CPU : 8 Virtual CPUs\n    Memory : 16.0 GiB\n\n# Go version and configurations\nGo Version : go1.12.9 linux/amd64\nGOMAXPROCS=8\n")),Object(c.b)("h4",{id:"echo-server"},"Echo Server"),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://github.com/panjf2000/gnet_benchmarks/raw/master/results/echo_linux.png",alt:null}))),Object(c.b)("h4",{id:"http-server"},"HTTP Server"),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://github.com/panjf2000/gnet_benchmarks/raw/master/results/http_linux.png",alt:null}))),Object(c.b)("h2",{id:"freebsd-kqueue"},"FreeBSD (kqueue)"),Object(c.b)("h3",{id:"\u7cfb\u7edf\u53c2\u6570-1"},"\u7cfb\u7edf\u53c2\u6570"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-powershell"}),"# Machine information\n        OS : macOS Mojave 10.14.6/x86_64\n       CPU : 4 CPUs\n    Memory : 8.0 GiB\n\n# Go version and configurations\nGo Version : go version go1.12.9 darwin/amd64\nGOMAXPROCS=4\n")),Object(c.b)("h4",{id:"echo-server-1"},"Echo Server"),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://github.com/panjf2000/gnet_benchmarks/raw/master/results/echo_mac.png",alt:null}))),Object(c.b)("h4",{id:"http-server-1"},"HTTP Server"),Object(c.b)("p",null,Object(c.b)("img",Object(r.a)({parentName:"p"},{src:"https://github.com/panjf2000/gnet_benchmarks/raw/master/results/http_mac.png",alt:null}))),Object(c.b)("h1",{id:"\ufe0f-\u8bc1\u4e66"},"\ufe0f\ud83d\udea8 \u8bc1\u4e66"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7684\u6e90\u7801\u5141\u8bb8\u7528\u6237\u5728\u9075\u5faa ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/panjf2000/gnet/blob/master/LICENSE"}),"MIT \u5f00\u6e90\u8bc1\u4e66")," \u89c4\u5219\u7684\u524d\u63d0\u4e0b\u4f7f\u7528\u3002"),Object(c.b)("h1",{id:"-\u8d21\u732e\u8005"},"\ud83d\udc4f \u8d21\u732e\u8005"),Object(c.b)("p",null,"\u8bf7\u5728\u63d0 PR \u4e4b\u524d\u4ed4\u7ec6\u9605\u8bfb ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/panjf2000/gnet/blob/master/CONTRIBUTING.md"}),"Contributing Guidelines"),"\uff0c\u611f\u8c22\u90a3\u4e9b\u4e3a ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u8d21\u732e\u8fc7\u4ee3\u7801\u7684\u5f00\u53d1\u8005\uff01"),Object(c.b)("p",null,Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/panjf2000/gnet/graphs/contributors"}),Object(c.b)("img",Object(r.a)({parentName:"a"},{src:"https://opencollective.com/gnet/contributors.svg?width=890&button=false",alt:null})))),Object(c.b)("h1",{id:"-\u81f4\u8c22"},"\ud83d\ude4f \u81f4\u8c22"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/tidwall/evio"}),"evio")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/netty/netty"}),"netty")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/panjf2000/ants"}),"ants")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/kavu/go_reuseport"}),"go_reuseport")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/valyala/bytebufferpool"}),"bytebufferpool")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/smallnest/goframe"}),"goframe")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/smallnest/ringbuffer"}),"ringbuffer"))),Object(c.b)("h1",{id:"-\u76f8\u5173\u6587\u7ae0"},"\u2693 \u76f8\u5173\u6587\u7ae0"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.freecodecamp.org/news/million-websockets-and-go-cc58418460bb/"}),"A Million WebSockets and Go")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://speakerdeck.com/eranyanay/going-infinite-handling-1m-websockets-connections-in-go"}),"Going Infinite, handling 1M websockets connections in Go")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://taohuawu.club/go-netpoll-io-multiplexing-reactor"}),"Go netpoll I/O \u591a\u8def\u590d\u7528\u6784\u5efa\u539f\u751f\u7f51\u7edc\u6a21\u578b\u4e4b\u6e90\u7801\u6df1\u5ea6\u89e3\u6790")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://taohuawu.club/go-event-loop-networking-library-gnet"}),"gnet: \u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4e14\u9ad8\u6027\u80fd\u7684 Golang \u7f51\u7edc\u5e93")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://taohuawu.club/releasing-gnet-v1-with-techempower"}),"\u6700\u5feb\u7684 Go \u7f51\u7edc\u6846\u67b6 gnet \u6765\u5566\uff01")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://taohuawu.club/bytedance-network-library-practices"}),"\u5b57\u8282\u8df3\u52a8\u5728 Go \u7f51\u7edc\u5e93\u4e0a\u7684\u5b9e\u8df5"))),Object(c.b)("h1",{id:"-\u652f\u6301"},"\ud83d\udcb0 \u652f\u6301"),Object(c.b)("p",null,"\u5982\u679c\u6709\u610f\u5411\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u6708\u5b9a\u91cf\u7684\u5c11\u8bb8\u6350\u8d60\u6765\u652f\u6301\u8fd9\u4e2a\u9879\u76ee\u3002"),Object(c.b)("a",{href:"https://opencollective.com/gnet#backers",target:"_blank"},Object(c.b)("img",{src:"https://opencollective.com/gnet/backers.svg"})),Object(c.b)("h1",{id:"-\u8d5e\u52a9"},"\ud83d\udc8e \u8d5e\u52a9"),Object(c.b)("p",null,"\u6bcf\u6708\u5b9a\u91cf\u6350\u8d60 10 \u5200\u5373\u53ef\u6210\u4e3a\u672c\u9879\u76ee\u7684\u8d5e\u52a9\u8005\uff0c\u5c4a\u65f6\u60a8\u7684 logo \u6216\u8005 link \u53ef\u4ee5\u5c55\u793a\u5728\u672c\u9879\u76ee\u7684 README \u4e0a\u3002"),Object(c.b)("a",{href:"https://opencollective.com/gnet#sponsors",target:"_blank"},Object(c.b)("img",{src:"https://opencollective.com/gnet/sponsors.svg"})),Object(c.b)("h1",{id:"\ufe0f-\u6253\u8d4f"},"\u2615\ufe0f \u6253\u8d4f"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"\u5f53\u60a8\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u6350\u8d60\u65f6\uff0c\u8bf7\u52a1\u5fc5\u7559\u4e0b\u59d3\u540d\u3001Github\u8d26\u53f7\u6216\u5176\u4ed6\u793e\u4ea4\u5a92\u4f53\u8d26\u53f7\uff0c\u4ee5\u4fbf\u6211\u5c06\u5176\u6dfb\u52a0\u5230\u6350\u8d60\u8005\u540d\u5355\u4e2d\uff0c\u4ee5\u8868\u8c22\u610f\u3002")),Object(c.b)("table",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/WeChatPay.JPG",width:"250"})),Object(c.b)("td",null,Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/AliPay.JPG",width:"250"})),Object(c.b)("td",null,Object(c.b)("a",{href:"https://www.paypal.me/R136a1X",target:"_blank"},Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/payments/PayPal.JPG",width:"250"}))))),Object(c.b)("h1",{id:"-\u6350\u8d60\u8005\u540d\u5355"},"\ud83d\udcb4 \u6350\u8d60\u8005\u540d\u5355"),Object(c.b)("a",{target:"_blank",href:"https://github.com/patrick-othmer"},Object(c.b)("img",{src:"https://avatars1.githubusercontent.com/u/8964313",width:"100",alt:"Patrick Othmer"})),"\xa0\xa0",Object(c.b)("a",{target:"_blank",href:"https://github.com/panjf2000/gnet"},Object(c.b)("img",{src:"https://avatars2.githubusercontent.com/u/50285334",width:"100",alt:"Jimmy"})),"\xa0\xa0",Object(c.b)("a",{target:"_blank",href:"https://github.com/cafra"},Object(c.b)("img",{src:"https://avatars0.githubusercontent.com/u/13758306",width:"100",alt:"ChenZhen"})),"\xa0\xa0",Object(c.b)("a",{target:"_blank",href:"https://github.com/yangwenmai"},Object(c.b)("img",{src:"https://avatars0.githubusercontent.com/u/1710912",width:"100",alt:"Mai Yang"})),"\xa0\xa0",Object(c.b)("a",{target:"_blank",href:"https://github.com/BeijingWks"},Object(c.b)("img",{src:"https://avatars3.githubusercontent.com/u/33656339",width:"100",alt:"\u738b\u5f00\u5e05"})),Object(c.b)("h1",{id:"-\u4ed8\u8d39\u652f\u6301"},"\ud83d\udcb5 \u4ed8\u8d39\u652f\u6301"),Object(c.b)("p",{align:"center"},Object(c.b)("a",{title:"XS:CODE",target:"_blank",href:"https://xscode.com/panjf2000/gnet"},Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/go/gnet-banner.png"}))),Object(c.b)("p",null,"\u5982\u679c\u4f60\u9700\u8981\u4e00\u4e2a\u6df1\u5ea6\u5b9a\u5236\u7684 ",Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u7248\u672c\u4e14\u60f3\u8981\u4f5c\u8005\u534f\u52a9\u5f00\u53d1\u3001\u6216\u8005\u662f\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u7cbe\u529b\u7684 bug \u4fee\u590d/\u5feb\u901f\u65b9\u6848/\u54a8\u8be2\u7b49\uff0c\u53ef\u4ee5\u5230",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://xscode.com/panjf2000/gnet"}),"\u8fd9\u91cc"),"\u7533\u8bf7\u4ed8\u8d39\u652f\u6301\u3002"),Object(c.b)("h1",{id:"-jetbrains-\u5f00\u6e90\u8bc1\u4e66\u652f\u6301"},"\ud83d\udd11 JetBrains \u5f00\u6e90\u8bc1\u4e66\u652f\u6301"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"gnet")," \u9879\u76ee\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u5728 JetBrains \u516c\u53f8\u65d7\u4e0b\u7684 GoLand \u96c6\u6210\u5f00\u53d1\u73af\u5883\u4e2d\u8fdb\u884c\u5f00\u53d1\uff0c\u57fa\u4e8e ",Object(c.b)("strong",{parentName:"p"},"free JetBrains Open Source license(s)")," \u6b63\u7248\u514d\u8d39\u6388\u6743\uff0c\u5728\u6b64\u8868\u8fbe\u6211\u7684\u8c22\u610f\u3002"),Object(c.b)("a",{href:"https://www.jetbrains.com/?from=gnet",target:"_blank"},Object(c.b)("img",{src:"https://raw.githubusercontent.com/panjf2000/illustrations/master/jetbrains/jetbrains-variant-4.png",width:"250",align:"middle"})),Object(c.b)("h1",{id:"-\u8d5e\u52a9\u5546"},"\ud83d\udd0b \u8d5e\u52a9\u5546"),Object(c.b)("p",null,Object(c.b)("h3",null,"\u672c\u9879\u76ee\u7531\u4ee5\u4e0b\u673a\u6784\u8d5e\u52a9\uff1a"),Object(c.b)("a",{href:"https://www.digitalocean.com/"},Object(c.b)("img",{src:"https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg",width:"201px"}))))}p.isMDXComponent=!0},216:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},s=function(e){var n=p(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),s=p(t),m=r,d=s["".concat(o,".").concat(m)]||s[m]||u[m]||c;return t?a.a.createElement(d,i({ref:n},l,{components:t})):a.a.createElement(d,i({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,o=new Array(c);o[0]=m;var i={};for(var b in n)hasOwnProperty.call(n,b)&&(i[b]=n[b]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=t[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);